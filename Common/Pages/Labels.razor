@page "/labels"
@inject AppData appData

<PageTitle>Labels</PageTitle>

<h3>Labels</h3>

<div class="labels">
    @foreach (var index in appData.blazorBoardData.Labels.Select((e, i) => i))
    {
        <div class="label" style="color: @appData.blazorBoardData.Labels[index].Color; background: @appData.blazorBoardData.Labels[index].Background;">
            <input type="text" class="label-element label-text editable-input" @bind-value="appData.blazorBoardData.Labels[index].Title" />
            <input type="color" class="label-element label-background editable-input" @bind-value="appData.blazorBoardData.Labels[index].Background" />
            <input type="color" class="label-element label-color editable-input" @bind-value="appData.blazorBoardData.Labels[index].Color" />
            <div class="label-element label-delete">
                <Icon Name="IconName.Delete" @onclick="() => DeleteLabel(index)" />
            </div>
        </div>
    }
</div>

<Button Color="Color.Primary" @onclick="AddLabel" Outline><Icon Name="IconName.Add" /></Button>

@code {
    private void AddLabel()
    {
        var random = new Random();
        var newLabel = new Common.Models.Label("Label", "#000000", $"#{random.Next(0, 256).ToString("X2")}{random.Next(0, 256).ToString("X2")}{random.Next(0, 256).ToString("X2")}");
        appData.blazorBoardData.Labels.Add(newLabel);
    }

    private void DeleteLabel(int index)
    {
        appData.blazorBoardData.Labels.RemoveAt(index);
    }
}
