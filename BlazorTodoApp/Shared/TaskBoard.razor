<div class="card board">
    <h5>@BoardData.Title</h5>
    <div>
        @foreach (var index in BoardData.Tasks.Select((e, i) => i))
        {
            <div draggable="true"
                 id="@BoardData.Tasks[index].Id"
                 ondragover="event.preventDefault();"
            @key=@BoardData.Tasks[index].Id
            @ondragstart="@( () => globalDragStart.InvokeAsync(BoardData.Tasks[index]))"
            @ondrop="@( () => globalDragDrop.InvokeAsync((BoardData.Id, index)))">
                <TaskOverview @bind-TaskData="BoardData.Tasks[index]" />
            </div>
        }
        <div class="add-task"
             ondragover="event.preventDefault();"
        @ondrop="@( () => globalDragDrop.InvokeAsync((BoardData.Id, BoardData.Tasks.Count)) )">
            <button class="btn btn-outline-primary" @onclick="AddTask">+</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Board BoardData { get; set; }

    [Parameter]
    public EventCallback<Board> BoardDataChanged { get; set; }

    [Parameter]
    public EventCallback<TaskItem> globalDragStart { get; set; }
    [Parameter]
    public EventCallback globalDragEnd { get; set; }
    [Parameter]
    public EventCallback<(string insertAtBoardId, int insertAtBoardPosition)> globalDragDrop { get; set; }

    private void AddTask()
    {
        BoardData.Tasks.Add(new TaskItem("Task"));
        BoardDataChanged.InvokeAsync(BoardData);
    }
}
